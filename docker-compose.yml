version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-copyshare}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    volumes:
      - ./docker/rabbitmq/data:/var/lib/rabbitmq
      - ./docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf 
    networks:
      - app_network

  web_flask:
    build: 
      context: .
      dockerfile: web_flask/Dockerfile
    container_name: web_flask
    restart: always
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-copyshare}
      - RABBITMQ_HOST=rabbitmq
    volumes:
      - ./logs/web_flask:/app/logs
      - ./web_flask:/app
    ports:
      - "5000:5000"
    networks:
      - app_network

  notification_service:
    build:
      context: .
      dockerfile: notification_service/Dockerfile
    container_name: notification_service
    restart: always
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-copyshare}
      - RABBITMQ_HOST=rabbitmq
    volumes:
      - ./logs/notification_service:/app/logs
      - ./notification_service:/app
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - web_flask
    networks:
      - app_network


networks:
  app_network:
    driver: bridge